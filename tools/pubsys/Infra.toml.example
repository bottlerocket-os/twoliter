# This is an example infrastructure configuration for pubsys, the tool that
# creates repos when you call `cargo make repo`.  Save a copy as `Infra.toml`
# at the root of the repo, then edit the settings below to match your use case.

# You can have any number of repos defined and build a specific one by running like this:
#     cargo make repo -e PUBLISH_REPO=myrepo
[repo.default]
# URL to your root role JSON file; can be a file:// URL for local files.  If
# you don't specify one here, a file will be generated for you under /roles.
# For production use, you should store them somewhere safer.
root_role_url = "https://example.com/root.json"
# SHA512 checksum of your root role JSON file.
root_role_sha512 = "0123456789abcdef"

# For reference, this is the Bottlerocket root role:
#root_role_url = "https://cache.bottlerocket.aws/root.json"
#root_role_sha512 = "90393204232a1ad6b0a45528b1f7df1a3e37493b1e05b1c149f081849a292c8dafb4ea5f7ee17bcc664e35f66e37e4cfa4aae9de7a2a28aa31ae6ac3d9bea4d5"

# pubsys assumes a single publication key that signs the snapshot, targets,
# and timestamp roles.  Here you specify where that key lives so we can sign
# the created repo.  If you don't specify one here, a key will be generated for
# you under /keys.  For production use, you should use a key stored in a
# trusted service like KMS or SSM.
# (Need inline table syntax until this is fixed: https://github.com/alexcrichton/toml-rs/issues/225)
signing_keys = { file = { path = "/home/user/key.pem" } }
#signing_keys = { kms = { key_id = "abc-def-123" } }
#signing_keys = { ssm = { parameter = "/my/parameter" } }

# If these URLs are uncommented, the repo will be pulled and used as a starting
# point, and your images (and related files) will be added as a new update in
# the created repo.  Otherwise, we build a new repo from scratch.
metadata_base_url = "https://example.com/metadata/"
targets_url = "https://example.com/targets/"

[aws]
# The list of regions in which you want to publish AMIs. We register an AMI in
# the first region and copy it to all other regions.
regions = ["us-west-2", "us-east-1", "us-east-2"]
# If specified, we use this named profile from ~/.aws/credentials, rather than
# the default path of trying credentials from the environment, from a
# credential process, from the default profile, and then from an IAM instance
# profile.
profile = "my-profile"
# If specified, we assume this role before making any API calls.
role = "arn:aws:iam::012345678901:role/assume-global"
# If specified, this string will be prefixed on all parameter names published to SSM.
ssm_prefix = "/your/prefix/here"

[aws.region.us-west-2]
# If specified, we assume this role before making any API calls in this region.
# (This is assumed after the "global" aws.role, if that is also specified.)
role = "arn:aws:iam::012345678901:role/assume-regional"
